<!DOCTYPE html>
<html>
<head>
<title>jan2014</title>
<script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
<style>
body {
    font-family: "Helvetica Neue", Helvetica, sans-serif;
    margin: 1em auto 4em auto;
    position: relative;
    tab-size: 2;
    width: 860px;
}
h1 {
    margin: 1em auto 4em auto;
    font-size: 64px;
    font-weight: 300;
    letter-spacing: -2px;
    margin: .3em 0 .1em 0;
    text-rendering: optimizeLegibility;
}
svg {
    border: 1px solid #dedede;
}
a {
    color: steelblue;
}
a:not(:hover) {
    text-decoration: none;
}
.small {
    font-size: 0.8em;
}
.attendee:not(:hover) text {
    display: none;
}
</style>
</head>
<body>
<p>Jan, 2014</p>
<h1>OPR Workshops and Registrants</h1>
<p>Hover mouse pointer over a node to see the first name
  and status of the person. Or drag the points to re-arrange.
</p>
<script>
var w = 860,
    h = 520,
    data = { nodes: %s, edges: %s };

var colors = d3.scale.category10();

var deptColor = function(d) {
    if (d === 'pop') { return colors(4); }
    else if (d === 'soc') { return colors(2); }
    else if (d === 'pol') { return colors(3); }
    else { return 'lightgray'; }
};

var force = d3.layout.force()
    .nodes(data.nodes)
    .links(data.edges)
    .size([w, h])
    .linkDistance(function(d) {
        if (d.type === 'attends') { return 100; }
        else if (d.type === 'belongs') { return 30; }
    })
    .charge([-200])
    .start();

var svg = d3.select("body")
    .append("svg")
    .attr("width", w)
    .attr("height", h);

var edges = svg.selectAll("line")
    .data(data.edges)
    .enter()
    .append("line")
    .style("stroke", function(d) {
        if (d.type === 'attends') { return '#ccc'; }
        else if (d.type === 'belongs') { return 'white'; }
    })
    .style("stroke-width", 1);

var gnodes = svg.selectAll('g.gnode')
    .data(data.nodes)
    .enter()
    .append('g')
    .classed('gnode', true)
    .attr("class", function(d) {
        return d.type;
    })

var nodes = gnodes.append("circle")
    .attr("class", "node")
    .attr("r", 10)
    .attr("opacity", function(d) {
        if (d.type === 'workshop') { return 1.0; }
        else if (d.type === 'attendee') { return 0.7; }
        else if (d.type === 'department') { return 0; }
    })
    .style("fill", function(d, i) {
        if (d.type === 'workshop') { return colors(1); }
        else if (d.type === "attendee") { return deptColor(d.department); }
        else if (d.type === "department") { return 'white'; }
        else { return 'lightgray'; }
    })
    .call(force.drag);

var labels = gnodes.append("text")
    .attr("dx", 12)
    .attr("dy", ".35em")
    .attr("fill", function(d) {
        if (d.type === 'department') { return deptColor(d.name); }
    })
    .text(function(d) {
        if (d.type === 'workshop') { return d.topic; }
        else if (d.type === 'attendee') { return d.name + ", " + d.status; }
        else if (d.type === 'department') { return d.name.toUpperCase(); }
    });

force.on("tick", function() {
    edges.attr("x1", function(d) { return d.source.x; })
         .attr("y1", function(d) { return d.source.y; })
         .attr("x2", function(d) { return d.target.x; })
         .attr("y2", function(d) { return d.target.y; });
    gnodes.attr("transform", function(d) {
        return 'translate(' + [d.x, d.y] + ')';
    });
});
</script>
<p class='small'>Registration data (netid) are
  from Dawn's excel workbook,
  <em>WorkshopRegistrationJan2014.xlsx</em>. Department, status, 
  and other information are looked up at princeton&apos;s directory
  <a href='http://search.princeton.edu'>search</a>
  by netid as of Jun 6th, 2014.
  <a href='http://d3js.org/'>d3.js</a> rocks!</p>
</body>
</html>
